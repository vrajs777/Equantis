{"version":3,"sources":["App.js","index.js"],"names":["App","useState","nav1","setNav1","index","setIndex","nav2","setNav2","nav3","setNav3","nav4","setNav4","nav5","setNav5","data","setData","option","setOption","slider1","useRef","slider2","slider3","slider4","slider5","useEffect","current","fetch","then","response","json","datas","Object","keys","forEach","key","value","settings","loop","infinite","dots","arrows","beforeChange","currentSlide","nextSlide","afterChange","onChange","e","target","asNavFor","ref","className","slidesToShow","swipeToSlide","draggable","Yellow","map","i","el","name","Blue","email","Pink","about","Orange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.002ee8c4.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\n\nimport \"./styles.css\";\nfunction App() {\n  const [nav1, setNav1] = useState(null);\n  const [index, setIndex] = useState(null);\n  const [nav2, setNav2] = useState(null);\n  const [nav3, setNav3] = useState(null);\n  const [nav4, setNav4] = useState(null);\n  const [nav5, setNav5] = useState(null);\n  const [data, setData] = useState();\n  const [option, setOption] = useState(\"Your_bussness\");\n  const slider1 = useRef(null);\n  const slider2 = useRef(null);\n  const slider3 = useRef(null);\n  const slider4 = useRef(null);\n  const slider5 = useRef(null);\n\n  useEffect(() => {\n    setNav1(slider1.current);\n    setNav2(slider2.current);\n    setNav3(slider3.current);\n    setNav4(slider4.current);\n    setNav5(slider5.current);\n    setIndex(0);\n\n    fetch(\"https://run.mocky.io/v3/aa4d7762-6fd9-45aa-9ba3-51d89b8a722f\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        let datas = data[0];\n\n        Object.keys(datas).forEach(function (key) {\n          if (key == option) {\n            //  console.log(data, key);\n            var value = datas[key];\n            setData(value);\n            return false;\n          }\n        });\n      });\n  }, [option]);\n\n  const settings = {\n    loop: true,\n    infinite: false,\n    // autoplay: true,\n    dots: true,\n    arrows: false,\n    // autoplaySpeed: 3000,\n\n    beforeChange: function (currentSlide, nextSlide) {\n      // console.log(\"before change\", currentSlide, nextSlide);\n    },\n    afterChange: function (currentSlide) {\n      // console.log(\"after change\", currentSlide);\n      setIndex(currentSlide);\n    },\n  };\n  const handleChange = (e) => {\n    setOption(e.target.value);\n  };\n  return (\n    <div>\n      <select onChange={handleChange} value={option}>\n        <option value='Your_bussness'>Your_bussness</option>\n        <option value='Heigher_Education'>Heigher_Education</option>\n        <option value='MemberShip'>MemberShip</option>\n        <option value='Not_for_profit'>Not_for_profit</option>\n      </select>\n\n      <div>\n        <h4> slider</h4>\n        <Slider asNavFor={nav2} ref={slider1} {...settings} className='banner'>\n          <div>\n            <h3>Main Banner 1</h3>\n          </div>\n          <div>\n            <h3>Main Banner 2</h3>\n          </div>\n          <div>\n            <h3>Main Banner 3</h3>\n          </div>\n          <div>\n            <h3>Main Banner 4</h3>\n          </div>\n        </Slider>\n        <div className='static'>\n          <h4>static section</h4>\n        </div>\n        {/* {console.log(\n          data ? data.Yellow.map((i, el) => console.log(i, el)) : \"loading \"\n        )} */}\n\n        <Slider\n          infinite={false}\n          arrows={false}\n          asNavFor={nav3}\n          ref={slider2}\n          slidesToShow={1}\n          swipeToSlide={false}\n          draggable={false}\n          // focusOnSelect={true}\n          className='firstsection'>\n          {data ? (\n            data.Yellow.map((i, el) =>\n              index === el ? (\n                <div key={i.index}>\n                  <h2>{i.index + 1}</h2>\n                  <h2>{i.name}</h2>\n                </div>\n              ) : (\n                <div key={i.index}>\n                  <h2>loading...</h2>\n                  <h2>loading...</h2>\n                </div>\n              )\n            )\n          ) : (\n            <h2>loading</h2>\n          )}\n          {/* {data.map((i, el) => {\n            // console.log(index, \"index\", el);\n            if (index === el) {\n              return (\n                <div>\n                  <h2>{i.index}</h2>\n                  <h2>{i.index}</h2>\n                </div>\n              );\n            } else {\n              return (\n                <div>\n                  <h2>data</h2>\n                  <h2>data</h2>\n                </div>\n              );\n            }\n          })} */}\n        </Slider>\n\n        <Slider\n          infinite={false}\n          arrows={false}\n          asNavFor={nav4}\n          ref={slider3}\n          slidesToShow={1}\n          swipeToSlide={false}\n          draggable={false}\n          // focusOnSelect={true}\n        >\n          {data ? (\n            data.Blue.map((i, el) =>\n              index === el ? (\n                <div key={i.index}>\n                  <h2>{i.index + 1}</h2>\n                  <h2>{i.email}</h2>\n                </div>\n              ) : (\n                <div key={i.index}>\n                  <h2>loading...</h2>\n                  <h2>loading...</h2>\n                </div>\n              )\n            )\n          ) : (\n            <h2>loading</h2>\n          )}\n        </Slider>\n\n        <Slider\n          infinite={false}\n          arrows={false}\n          asNavFor={nav5}\n          ref={slider4}\n          slidesToShow={1}\n          swipeToSlide={false}\n          draggable={false}\n          // focusOnSelect={true}\n        >\n          {data ? (\n            data.Pink.map((i, el) =>\n              index === el ? (\n                <div key={i.index}>\n                  <h2>{i.index + 1}</h2>\n                  <h2>{i.about}</h2>\n                </div>\n              ) : (\n                <div key={i.index}>\n                  <h2>loading...</h2>\n                  <h2>loading...</h2>\n                </div>\n              )\n            )\n          ) : (\n            <h2>loading</h2>\n          )}\n        </Slider>\n\n        <Slider\n          infinite={false}\n          arrows={false}\n          asNavFor={nav1}\n          ref={slider5}\n          slidesToShow={1}\n          swipeToSlide={false}\n          draggable={false}\n          // focusOnSelect={true}\n        >\n          {data ? (\n            data.Orange.map((i, el) =>\n              index === el ? (\n                <div key={i.index}>\n                  <h2>{i.index + 1}</h2>\n                  <h2>{i.email}</h2>\n                </div>\n              ) : (\n                <div key={i.index}>\n                  <h2>loading...</h2>\n                  <h2>loading...</h2>\n                </div>\n              )\n            )\n          ) : (\n            <h2>loading</h2>\n          )}\n        </Slider>\n      </div>\n    </div>\n  );\n}\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n// /*https://run.mocky.io/v3/aa4d7762-6fd9-45aa-9ba3-51d89b8a722f*/\n// /*https://designer.mocky.io/manage/delete/aa4d7762-6fd9-45aa-9ba3-51d89b8a722f/j0I5U7B2dbCtmNoXTGukFACfgM8mTH7hQOzA*/\n"],"sourceRoot":""}